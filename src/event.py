"""Event module."""
from enum import Enum


class Direction(Enum):
    UP = 1
    DOWN = 2
    LEFT = 3
    RIGHT = 4


class Event:
    """A superclass for any events that might be generated by an object and sent to the EventManager."""

    def __init__(self, name: str = "Generic event"):
        self.name = name

    def __str__(self):
        return self.name


class StartGameEvent(Event):
    """A superclass for any events that might be generated by an object and sent to the EventManager."""

    def __init__(self):
        super().__init__("Start game event")


class TickEvent(Event):
    """Tick event."""

    def __init__(self):
        super().__init__("Tick event")


class PauseEvent(Event):
    """Pause event."""

    def __init__(self):
        super().__init__("Pause event")


class SelectEvent(Event):
    """Select event."""

    def __init__(self):
        super().__init__("Select event")


class QuitEvent(Event):
    """Quit event."""

    def __init__(self):
        super().__init__("Quit event")


class EscapeEvent(Event):
    """Escape event."""

    def __init__(self):
        super().__init__("Escape event")


class MovementEvent(Event):
    """Keyboard or mouse input event."""

    def __init__(self, direction: Direction):
        super().__init__("Movement event")
        self.direction = direction

    def __str__(self):
        return f"{self.name}, direction={self.direction}"


class KeyboardEvent(Event):
    """Keyboard or mouse input event."""

    def __init__(self, key_char: str):
        super().__init__("Keyboard Event")
        self.key_char = key_char

    def __str__(self):
        return f"{self.name}, key_char={self.key_char}"
