"""Event module."""
from enum import Enum


class Direction(Enum):
    UP = 1
    DOWN = 2
    LEFT = 3
    RIGHT = 4


class Event:
    """A superclass for any events that might be generated by an object and sent to the EventManager."""

    def __init__(self):
        self.name = "Generic event"

    def __str__(self):
        return self.name


class StartGameEvent(Event):
    """A superclass for any events that might be generated by an object and sent to the EventManager."""

    def __init__(self):
        self.name = "Start game event"

    def __str__(self):
        return self.name


class TickEvent(Event):
    """Tick event."""

    def __init__(self):
        self.name = "Tick event"


class PauseEvent(Event):
    """Pause event."""

    def __init__(self):
        self.name = "Pause event"


class SelectEvent(Event):
    """Select event."""

    def __init__(self):
        self.name = "Select event"


class QuitEvent(Event):
    """Quit event."""

    def __init__(self):
        self.name = "Quit event"


class EscapeEvent(Event):
    """Escape event."""

    def __init__(self):
        self.name = "Escape event"


class MovementEvent(Event):
    """Keyboard or mouse input event."""

    def __init__(self, direction: Direction):
        self.name = "Movement event"
        self.direction = direction

    def __str__(self):
        return '%s, direction=%s' % (self.name, self.direction)


class KeyboardEvent(Event):
    """Keyboard or mouse input event."""

    def __init__(self, key_char: str):
        self.name = "Movement event"
        self.key_char = key_char

    def __str__(self):
        return '%s, key_char=%s' % (self.name, self.key_char)
